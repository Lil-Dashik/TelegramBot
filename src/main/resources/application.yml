spring:
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: bot-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.LongDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: '*'
        spring.json.value.default.type: project.dto.NotificationDTO
    producer:
      key-serializer: org.apache.kafka.common.serialization.LongSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
bot:
  name: ${BOT_NAME}
  token: ${BOT_TOKEN}
server:
  port: ${SERVER_PORT}
management:
  endpoints:
    web:
      exposure:
        include: prometheus, metrics, health
  endpoint:
    prometheus:
      enabled: true
  metrics:
    enable:
      all: true